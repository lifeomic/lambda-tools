name: PR Build and Test

on:
  pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    name: Node.JS ${{ matrix.node-version }}
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - id: masterAndTagCommit
        name: Get tag and expected commit hash
        run: |
          echo "::set-output name=masterCommit::$(git rev-parse HEAD~2)"
          echo "::set-output name=tagCommit::$(git rev-list -n 1 "v$(node -p "require('./package').version")")"
      - name: No match
        if: ${{ steps.masterAndTagCommit.outputs.masterCommit == steps.masterAndTagCommit.outputs.tagCommit }}
        run: echo "Tagged commit exists"
      - name: Matches
        if: ${{ steps.masterAndTagCommit.outputs.masterCommit != steps.masterAndTagCommit.outputs.tagCommit }}
        run: echo "Tagged commit exists"
#      - name: Install
#        run: yarn install
#      - name: Test
#        env:
#          LAMBDA_REMOTE_DOCKER: true
#        run: yarn test
#      - name: Coverage
#        run: yarn coverage
#      - name: Coveralls
#        uses: coverallsapp/github-action@v1.1.2
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          path-to-lcov: .nyc_output/lcov.info
#          flag-name: run-${{ matrix.node }}
#          parallel: true
#  preRelease:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: 12
#          registry-url: https://registry.npmjs.org
#      - name: Install
#        run: yarn install --frozen-lockfile
#      - name: Version
#        env:
#          PRE_ID: pr-${{ github.event.number }}-${{ github.run_id }}
#        run: npm version prepatch --git-tag-version=false --preid="${PRE_ID}-$(date '+%s')"
#      - name: PrePublish
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.LIFEOMIC_NPM_TOKEN}}
#          PR_TAG: pr-${{ github.event.number }}
#        run: npm publish --tag "${PR_TAG}"
#  finish:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Coveralls Finished
#        uses: coverallsapp/github-action@v1.1.2
#        with:
#          github-token: ${{ secrets.github_token }}
#          parallel-finished: true
